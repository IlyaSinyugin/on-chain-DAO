{"version":3,"file":"CommonToken.js","sourceRoot":"","sources":["../../src/CommonToken.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:50.1614404-07:00\n\nimport { ATNSimulator } from \"./atn/ATNSimulator\";\nimport { CharStream } from \"./CharStream\";\nimport { Interval } from \"./misc/Interval\";\nimport { NotNull, Override } from \"./Decorators\";\nimport { Recognizer } from \"./Recognizer\";\nimport { Token } from \"./Token\";\nimport { TokenSource } from \"./TokenSource\";\nimport { WritableToken } from \"./WritableToken\";\n\nexport class CommonToken implements WritableToken {\n\t/**\n\t * An empty {@link Tuple2} which is used as the default value of\n\t * {@link #source} for tokens that do not have a source.\n\t */\n\tprotected static readonly EMPTY_SOURCE: { source?: TokenSource, stream?: CharStream } =\n\t\t{ source: undefined, stream: undefined };\n\n\t/**\n\t * This is the backing field for `type`.\n\t */\n\tprivate _type: number;\n\t/**\n\t * This is the backing field for {@link #getLine} and {@link #setLine}.\n\t */\n\tprivate _line: number = 0;\n\t/**\n\t * This is the backing field for {@link #getCharPositionInLine} and\n\t * {@link #setCharPositionInLine}.\n\t */\n\tprivate _charPositionInLine: number = -1; // set to invalid position\n\t/**\n\t * This is the backing field for {@link #getChannel} and\n\t * {@link #setChannel}.\n\t */\n\tprivate _channel: number = Token.DEFAULT_CHANNEL;\n\t/**\n\t * This is the backing field for {@link #getTokenSource} and\n\t * {@link #getInputStream}.\n\t *\n\t * These properties share a field to reduce the memory footprint of\n\t * {@link CommonToken}. Tokens created by a {@link CommonTokenFactory} from\n\t * the same source and input stream share a reference to the same\n\t * {@link Tuple2} containing these values.\n\t */\n\t@NotNull\n\tprotected source: { source?: TokenSource, stream?: CharStream };\n\n\t/**\n\t * This is the backing field for {@link #getText} when the token text is\n\t * explicitly set in the constructor or via {@link #setText}.\n\t *\n\t * @see `text`\n\t */\n\tprivate _text?: string;\n\n\t/**\n\t * This is the backing field for `tokenIndex`.\n\t */\n\tprotected index: number = -1;\n\n\t/**\n\t * This is the backing field for `startIndex`.\n\t */\n\tprotected start: number;\n\n\t/**\n\t * This is the backing field for `stopIndex`.\n\t */\n\tprivate stop: number;\n\n\tconstructor(type: number, text?: string, @NotNull source: { source?: TokenSource, stream?: CharStream } = CommonToken.EMPTY_SOURCE, channel: number = Token.DEFAULT_CHANNEL, start: number = 0, stop: number = 0) {\n\t\tthis._text = text;\n\t\tthis._type = type;\n\t\tthis.source = source;\n\t\tthis._channel = channel;\n\t\tthis.start = start;\n\t\tthis.stop = stop;\n\t\tif (source.source != null) {\n\t\t\tthis._line = source.source.line;\n\t\t\tthis._charPositionInLine = source.source.charPositionInLine;\n\t\t}\n\t}\n\n\t/**\n\t * Constructs a new {@link CommonToken} as a copy of another {@link Token}.\n\t *\n\t * If `oldToken` is also a {@link CommonToken} instance, the newly\n\t * constructed token will share a reference to the {@link #text} field and\n\t * the {@link Tuple2} stored in {@link #source}. Otherwise, {@link #text} will\n\t * be assigned the result of calling {@link #getText}, and {@link #source}\n\t * will be constructed from the result of {@link Token#getTokenSource} and\n\t * {@link Token#getInputStream}.\n\t *\n\t * @param oldToken The token to copy.\n\t */\n\tpublic static fromToken(@NotNull oldToken: Token): CommonToken {\n\t\tlet result: CommonToken = new CommonToken(oldToken.type, undefined, CommonToken.EMPTY_SOURCE, oldToken.channel, oldToken.startIndex, oldToken.stopIndex);\n\t\tresult._line = oldToken.line;\n\t\tresult.index = oldToken.tokenIndex;\n\t\tresult._charPositionInLine = oldToken.charPositionInLine;\n\n\t\tif (oldToken instanceof CommonToken) {\n\t\t\tresult._text = oldToken._text;\n\t\t\tresult.source = oldToken.source;\n\t\t} else {\n\t\t\tresult._text = oldToken.text;\n\t\t\tresult.source = { source: oldToken.tokenSource, stream: oldToken.inputStream };\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t@Override\n\tget type(): number {\n\t\treturn this._type;\n\t}\n\n\t// @Override\n\tset type(type: number) {\n\t\tthis._type = type;\n\t}\n\n\t@Override\n\tget line(): number {\n\t\treturn this._line;\n\t}\n\n\t// @Override\n\tset line(line: number) {\n\t\tthis._line = line;\n\t}\n\n\t@Override\n\tget text(): string | undefined {\n\t\tif (this._text != null) {\n\t\t\treturn this._text;\n\t\t}\n\n\t\tlet input: CharStream | undefined = this.inputStream;\n\t\tif (input == null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet n: number = input.size;\n\t\tif (this.start < n && this.stop < n) {\n\t\t\treturn input.getText(Interval.of(this.start, this.stop));\n\t\t} else {\n\t\t\treturn \"<EOF>\";\n\t\t}\n\t}\n\n\t/**\n\t * Explicitly set the text for this token. If {code text} is not\n\t * `undefined`, then {@link #getText} will return this value rather than\n\t * extracting the text from the input.\n\t *\n\t * @param text The explicit text of the token, or `undefined` if the text\n\t * should be obtained from the input along with the start and stop indexes\n\t * of the token.\n\t */\n\t// @Override\n\tset text(text: string | undefined) {\n\t\tthis._text = text;\n\t}\n\n\t@Override\n\tget charPositionInLine(): number {\n\t\treturn this._charPositionInLine;\n\t}\n\n\t// @Override\n\tset charPositionInLine(charPositionInLine: number) {\n\t\tthis._charPositionInLine = charPositionInLine;\n\t}\n\n\t@Override\n\tget channel(): number {\n\t\treturn this._channel;\n\t}\n\n\t// @Override\n\tset channel(channel: number) {\n\t\tthis._channel = channel;\n\t}\n\n\t@Override\n\tget startIndex(): number {\n\t\treturn this.start;\n\t}\n\n\tset startIndex(start: number) {\n\t\tthis.start = start;\n\t}\n\n\t@Override\n\tget stopIndex(): number {\n\t\treturn this.stop;\n\t}\n\n\tset stopIndex(stop: number) {\n\t\tthis.stop = stop;\n\t}\n\n\t@Override\n\tget tokenIndex(): number {\n\t\treturn this.index;\n\t}\n\n\t// @Override\n\tset tokenIndex(index: number) {\n\t\tthis.index = index;\n\t}\n\n\t@Override\n\tget tokenSource(): TokenSource | undefined {\n\t\treturn this.source.source;\n\t}\n\n\t@Override\n\tget inputStream(): CharStream | undefined {\n\t\treturn this.source.stream;\n\t}\n\n\tpublic toString(): string;\n\tpublic toString<TSymbol, ATNInterpreter extends ATNSimulator>(recognizer: Recognizer<TSymbol, ATNInterpreter> | undefined): string;\n\n\t@Override\n\tpublic toString<TSymbol, ATNInterpreter extends ATNSimulator>(recognizer?: Recognizer<TSymbol, ATNInterpreter>): string {\n\t\tlet channelStr: string = \"\";\n\t\tif (this._channel > 0) {\n\t\t\tchannelStr = \",channel=\" + this._channel;\n\t\t}\n\n\t\tlet txt: string | undefined = this.text;\n\t\tif (txt != null) {\n\t\t\ttxt = txt.replace(/\\n/g, \"\\\\n\");\n\t\t\ttxt = txt.replace(/\\r/g, \"\\\\r\");\n\t\t\ttxt = txt.replace(/\\t/g, \"\\\\t\");\n\t\t} else {\n\t\t\ttxt = \"<no text>\";\n\t\t}\n\n\t\tlet typeString = String(this._type);\n\t\tif (recognizer) {\n\t\t\ttypeString = recognizer.vocabulary.getDisplayName(this._type);\n\t\t}\n\n\t\treturn \"[@\" + this.tokenIndex + \",\" + this.start + \":\" + this.stop + \"='\" + txt + \"',<\" + typeString + \">\" + channelStr + \",\" + this._line + \":\" + this.charPositionInLine + \"]\";\n\t}\n}\n"]}