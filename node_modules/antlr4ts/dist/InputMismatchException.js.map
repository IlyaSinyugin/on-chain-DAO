{"version":3,"file":"InputMismatchException.js","sourceRoot":"","sources":["../../src/InputMismatchException.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;;;;AAEH,wDAAwD;AAExD,iEAA8D;AAC9D,6CAAuC;AAIvC;;GAEG;AACH,IAAa,sBAAsB,GAAnC,4BAAoC,SAAQ,2CAAoB;IAK/D,YAAqB,UAAkB,EAAE,KAAc,EAAE,OAA2B;QACnF,IAAI,OAAO,KAAK,SAAS,EAAE;YAC1B,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;SAC7B;QAED,KAAK,CAAC,UAAU,EAAE,UAAU,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAEnD,IAAI,KAAK,KAAK,SAAS,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC9B;QAED,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAC,YAAY,CAAC,CAAC;IAC7D,CAAC;CACD,CAAA;AAlBY,sBAAsB;IAKrB,WAAA,oBAAO,CAAA;GALR,sBAAsB,CAkBlC;AAlBY,wDAAsB","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:51.5187682-07:00\n\nimport { RecognitionException } from \"./RecognitionException\";\nimport { NotNull } from \"./Decorators\";\nimport { Parser } from \"./Parser\";\nimport { ParserRuleContext } from \"./ParserRuleContext\";\n\n/** This signifies any kind of mismatched input exceptions such as\n *  when the current input does not match the expected token.\n */\nexport class InputMismatchException extends RecognitionException {\n\t//private static serialVersionUID: number =  1532568338707443067L;\n\n\tconstructor(/*@NotNull*/ recognizer: Parser);\n\tconstructor(/*@NotNull*/ recognizer: Parser, state: number, context: ParserRuleContext);\n\tconstructor(@NotNull recognizer: Parser, state?: number, context?: ParserRuleContext) {\n\t\tif (context === undefined) {\n\t\t\tcontext = recognizer.context;\n\t\t}\n\n\t\tsuper(recognizer, recognizer.inputStream, context);\n\n\t\tif (state !== undefined) {\n\t\t\tthis.setOffendingState(state);\n\t\t}\n\n\t\tthis.setOffendingToken(recognizer, recognizer.currentToken);\n\t}\n}\n"]}