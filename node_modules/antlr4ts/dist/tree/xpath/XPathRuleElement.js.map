{"version":3,"file":"XPathRuleElement.js","sourceRoot":"","sources":["../../../../src/tree/xpath/XPathRuleElement.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;AAEH,+CAA+C;AAC/C,+DAA4D;AAC5D,iDAA4C;AAE5C,oCAAiC;AACjC,iDAA8C;AAE9C,sBAA8B,SAAQ,2BAAY;IAEjD,YAAY,QAAgB,EAAE,SAAiB;QAC9C,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5B,CAAC;IAGM,QAAQ,CAAC,CAAY;QAC3B,+CAA+C;QAC/C,IAAI,KAAK,GAAgB,EAAE,CAAC;QAC5B,KAAK,IAAI,CAAC,IAAI,aAAK,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;YACnC,IAAI,CAAC,YAAY,qCAAiB,EAAE;gBACnC,IAAI,CAAC,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;oBACnD,CAAC,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;oBACjD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACd;aACD;SACD;QACD,OAAO,KAAK,CAAC;IACd,CAAC;CACD;AAbA;IADC,qBAAQ;gDAaR;AApBF,4CAqBC","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// CONVERSTION complete, Burt Harris 10/14/2016\nimport { ParserRuleContext } from \"../../ParserRuleContext\";\nimport { Override } from \"../../Decorators\";\nimport { ParseTree } from \"../ParseTree\";\nimport { Trees } from \"../Trees\";\nimport { XPathElement } from \"./XPathElement\";\n\nexport class XPathRuleElement extends XPathElement {\n\tprotected ruleIndex: number;\n\tconstructor(ruleName: string, ruleIndex: number) {\n\t\tsuper(ruleName);\n\t\tthis.ruleIndex = ruleIndex;\n\t}\n\n\t@Override\n\tpublic evaluate(t: ParseTree): ParseTree[] {\n\t\t// return all children of t that match nodeName\n\t\tlet nodes: ParseTree[] = [];\n\t\tfor (let c of Trees.getChildren(t)) {\n\t\t\tif (c instanceof ParserRuleContext) {\n\t\t\t\tif ((c.ruleIndex === this.ruleIndex && !this.invert) ||\n\t\t\t\t\t(c.ruleIndex !== this.ruleIndex && this.invert)) {\n\t\t\t\t\tnodes.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn nodes;\n\t}\n}\n"]}