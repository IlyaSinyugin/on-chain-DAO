{"version":3,"file":"ParseTreeProperty.js","sourceRoot":"","sources":["../../../src/tree/ParseTreeProperty.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAMH;;;;;;;;;;;;;;;GAeG;AACH;IAGC,YAAY,OAAe,mBAAmB;QAC7C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAEM,GAAG,CAAC,IAAe;QACzB,OAAQ,IAAY,CAAC,IAAI,CAAC,OAAO,CAAM,CAAC;IACzC,CAAC;IAEM,GAAG,CAAC,IAAe,EAAE,KAAQ;QAClC,IAAY,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;IACrC,CAAC;IAEM,UAAU,CAAC,IAAe;QAChC,IAAI,MAAM,GAAI,IAAY,CAAC,IAAI,CAAC,OAAO,CAAM,CAAC;QAC9C,OAAQ,IAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,OAAO,MAAM,CAAC;IACf,CAAC;CACD;AApBD,8CAoBC","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:47.6782223-07:00\n\nimport { ParseTree } from \"./ParseTree\";\n\n/**\n * Associate a property with a parse tree node. Useful with parse tree listeners\n * that need to associate values with particular tree nodes, kind of like\n * specifying a return value for the listener event method that visited a\n * particular node. Example:\n *\n * ```\n * ParseTreeProperty<Integer> values = new ParseTreeProperty<Integer>();\n * values.put(tree, 36);\n * int x = values.get(tree);\n * values.removeFrom(tree);\n * ```\n *\n * You would make one decl (values here) in the listener and use lots of times\n * in your event methods.\n */\nexport class ParseTreeProperty<V> {\n\tprivate _symbol: symbol;\n\n\tconstructor(name: string = \"ParseTreeProperty\") {\n\t\tthis._symbol = Symbol(name);\n\t}\n\n\tpublic get(node: ParseTree): V {\n\t\treturn (node as any)[this._symbol] as V;\n\t}\n\n\tpublic set(node: ParseTree, value: V): void {\n\t\t(node as any)[this._symbol] = value;\n\t}\n\n\tpublic removeFrom(node: ParseTree): V {\n\t\tlet result = (node as any)[this._symbol] as V;\n\t\tdelete (node as any)[this._symbol];\n\t\treturn result;\n\t}\n}\n"]}