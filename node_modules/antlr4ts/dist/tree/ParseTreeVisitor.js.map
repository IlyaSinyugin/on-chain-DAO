{"version":3,"file":"ParseTreeVisitor.js","sourceRoot":"","sources":["../../../src/tree/ParseTreeVisitor.ts"],"names":[],"mappings":";AAAA;;;GAGG","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:47.7512217-07:00\n\nimport { ErrorNode } from \"./ErrorNode\";\nimport { ParseTree } from \"./ParseTree\";\nimport { RuleNode } from \"./RuleNode\";\nimport { TerminalNode } from \"./TerminalNode\";\n\n/**\n * This interface defines the basic notion of a parse tree visitor. Generated\n * visitors implement this interface and the `XVisitor` interface for\n * grammar `X`.\n *\n * @author Sam Harwell\n * @param <Result> The return type of the visit operation. Use {@link Void} for\n * operations with no return type.\n */\nexport interface ParseTreeVisitor<Result> {\n\n\t/**\n\t * Visit a parse tree, and return a user-defined result of the operation.\n\t *\n\t * @param tree The {@link ParseTree} to visit.\n\t * @returns The result of visiting the parse tree.\n\t */\n\tvisit(/*@NotNull*/ tree: ParseTree): Result;\n\n\t/**\n\t * Visit the children of a node, and return a user-defined result\n\t * of the operation.\n\t *\n\t * @param node The {@link RuleNode} whose children should be visited.\n\t * @returns The result of visiting the children of the node.\n\t */\n\tvisitChildren(/*@NotNull*/ node: RuleNode): Result;\n\n\t/**\n\t * Visit a terminal node, and return a user-defined result of the operation.\n\t *\n\t * @param node The {@link TerminalNode} to visit.\n\t * @returns The result of visiting the node.\n\t */\n\tvisitTerminal(/*@NotNull*/ node: TerminalNode): Result;\n\n\t/**\n\t * Visit an error node, and return a user-defined result of the operation.\n\t *\n\t * @param node The {@link ErrorNode} to visit.\n\t * @returns The result of visiting the node.\n\t */\n\tvisitErrorNode(/*@NotNull*/ node: ErrorNode): Result;\n\n}\n"]}