{"version":3,"file":"PlusBlockStartState.js","sourceRoot":"","sources":["../../../src/atn/PlusBlockStartState.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;AAEH,wDAAwD;AAExD,iDAA8C;AAC9C,uDAAoD;AACpD,8CAAyC;AAGzC;;;;GAIG;AACH,yBAAiC,SAAQ,iCAAe;IAIvD,IAAI,SAAS;QACZ,OAAO,2BAAY,CAAC,gBAAgB,CAAC;IACtC,CAAC;CACD;AAHA;IADC,qBAAQ;oDAGR;AANF,kDAOC","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:34.9572142-07:00\n\nimport { ATNStateType } from \"./ATNStateType\";\nimport { BlockStartState } from \"./BlockStartState\";\nimport { Override } from \"../Decorators\";\nimport { PlusLoopbackState } from \"./PlusLoopbackState\";\n\n/** Start of `(A|B|...)+` loop. Technically a decision state, but\n *  we don't use for code generation; somebody might need it, so I'm defining\n *  it for completeness. In reality, the {@link PlusLoopbackState} node is the\n *  real decision-making note for `A+`.\n */\nexport class PlusBlockStartState extends BlockStartState {\n\tpublic loopBackState: PlusLoopbackState;\n\n\t@Override\n\tget stateType(): ATNStateType {\n\t\treturn ATNStateType.PLUS_BLOCK_START;\n\t}\n}\n"]}