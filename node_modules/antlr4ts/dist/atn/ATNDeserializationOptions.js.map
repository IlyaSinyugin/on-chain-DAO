{"version":3,"file":"ATNDeserializationOptions.js","sourceRoot":"","sources":["../../../src/atn/ATNDeserializationOptions.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;AAEH,wDAAwD;AAExD,8CAAwC;AAExC;;;GAGG;AACH;IAQC,YAAY,OAAmC;QALvC,aAAQ,GAAY,KAAK,CAAC;QAMjC,IAAI,OAAO,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;YACnC,IAAI,CAAC,6BAA6B,GAAG,OAAO,CAAC,6BAA6B,CAAC;YAC3E,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;SACjC;aAAM;YACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;YAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB;IACF,CAAC;IAGD,MAAM,KAAK,cAAc;QACxB,IAAI,yBAAyB,CAAC,eAAe,IAAI,IAAI,EAAE;YACtD,yBAAyB,CAAC,eAAe,GAAG,IAAI,yBAAyB,EAAE,CAAC;YAC5E,yBAAyB,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;SACzD;QAED,OAAO,yBAAyB,CAAC,eAAe,CAAC;IAClD,CAAC;IAED,IAAI,UAAU;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEM,YAAY;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,IAAI,WAAW;QACd,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAED,IAAI,WAAW,CAAC,SAAkB;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5B,CAAC;IAED,IAAI,+BAA+B;QAClC,OAAO,IAAI,CAAC,6BAA6B,CAAC;IAC3C,CAAC;IAED,IAAI,+BAA+B,CAAC,6BAAsC;QACzE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,6BAA6B,GAAG,6BAA6B,CAAC;IACpE,CAAC;IAED,IAAI,UAAU;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,IAAI,UAAU,CAAC,QAAiB;QAC/B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC1B,CAAC;IAES,eAAe;QACxB,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;SAC5C;IACF,CAAC;CACD;AAjDA;IADC,oBAAO;qDAQP;AA5BF,8DAsEC","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:25.8187912-07:00\n\nimport { NotNull } from \"../Decorators\";\n\n/**\n *\n * @author Sam Harwell\n */\nexport class ATNDeserializationOptions {\n\tprivate static _defaultOptions?: ATNDeserializationOptions;\n\n\tprivate readOnly: boolean = false;\n\tprivate verifyATN: boolean;\n\tprivate generateRuleBypassTransitions: boolean;\n\tprivate optimize: boolean;\n\n\tconstructor(options?: ATNDeserializationOptions) {\n\t\tif (options) {\n\t\t\tthis.verifyATN = options.verifyATN;\n\t\t\tthis.generateRuleBypassTransitions = options.generateRuleBypassTransitions;\n\t\t\tthis.optimize = options.optimize;\n\t\t} else {\n\t\t\tthis.verifyATN = true;\n\t\t\tthis.generateRuleBypassTransitions = false;\n\t\t\tthis.optimize = true;\n\t\t}\n\t}\n\n\t@NotNull\n\tstatic get defaultOptions(): ATNDeserializationOptions {\n\t\tif (ATNDeserializationOptions._defaultOptions == null) {\n\t\t\tATNDeserializationOptions._defaultOptions = new ATNDeserializationOptions();\n\t\t\tATNDeserializationOptions._defaultOptions.makeReadOnly();\n\t\t}\n\n\t\treturn ATNDeserializationOptions._defaultOptions;\n\t}\n\n\tget isReadOnly(): boolean {\n\t\treturn this.readOnly;\n\t}\n\n\tpublic makeReadOnly(): void {\n\t\tthis.readOnly = true;\n\t}\n\n\tget isVerifyATN(): boolean {\n\t\treturn this.verifyATN;\n\t}\n\n\tset isVerifyATN(verifyATN: boolean) {\n\t\tthis.throwIfReadOnly();\n\t\tthis.verifyATN = verifyATN;\n\t}\n\n\tget isGenerateRuleBypassTransitions(): boolean {\n\t\treturn this.generateRuleBypassTransitions;\n\t}\n\n\tset isGenerateRuleBypassTransitions(generateRuleBypassTransitions: boolean) {\n\t\tthis.throwIfReadOnly();\n\t\tthis.generateRuleBypassTransitions = generateRuleBypassTransitions;\n\t}\n\n\tget isOptimize(): boolean {\n\t\treturn this.optimize;\n\t}\n\n\tset isOptimize(optimize: boolean) {\n\t\tthis.throwIfReadOnly();\n\t\tthis.optimize = optimize;\n\t}\n\n\tprotected throwIfReadOnly(): void {\n\t\tif (this.isReadOnly) {\n\t\t\tthrow new Error(\"The object is read only.\");\n\t\t}\n\t}\n}\n"]}