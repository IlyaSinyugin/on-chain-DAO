{"version":3,"file":"ActionTransition.js","sourceRoot":"","sources":["../../../src/atn/ActionTransition.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;;;;AAKH,8CAAkD;AAClD,6CAA0C;AAG1C,IAAa,gBAAgB,GAA7B,sBAA8B,SAAQ,uBAAU;IAK/C,YAAqB,MAAgB,EAAE,SAAiB,EAAE,cAAsB,CAAC,CAAC,EAAE,iBAA0B,KAAK;QAClH,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACtC,CAAC;IAGD,IAAI,iBAAiB;QACpB,sBAA6B;IAC9B,CAAC;IAGD,IAAI,SAAS;QACZ,OAAO,IAAI,CAAC,CAAC,wDAAwD;IACtE,CAAC;IAGM,OAAO,CAAC,MAAc,EAAE,cAAsB,EAAE,cAAsB;QAC5E,OAAO,KAAK,CAAC;IACd,CAAC;IAGM,QAAQ;QACd,OAAO,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;IAC5D,CAAC;CACD,CAAA;AAlBA;IADC,qBAAQ;yDAGR;AAGD;IADC,qBAAQ;iDAGR;AAGD;IADC,qBAAQ;+CAGR;AAGD;IADC,qBAAQ;gDAGR;AA9BW,gBAAgB;IAKf,WAAA,oBAAO,CAAA;GALR,gBAAgB,CA+B5B;AA/BY,4CAAgB","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:24.7363448-07:00\n\nimport { ATNState } from \"./ATNState\";\nimport { Override, NotNull } from \"../Decorators\";\nimport { Transition } from \"./Transition\";\nimport { TransitionType } from \"./TransitionType\";\n\nexport class ActionTransition extends Transition {\n\tpublic ruleIndex: number;\n\tpublic actionIndex: number;\n\tpublic isCtxDependent: boolean;  // e.g., $i ref in action\n\n\tconstructor(@NotNull target: ATNState, ruleIndex: number, actionIndex: number = -1, isCtxDependent: boolean = false) {\n\t\tsuper(target);\n\t\tthis.ruleIndex = ruleIndex;\n\t\tthis.actionIndex = actionIndex;\n\t\tthis.isCtxDependent = isCtxDependent;\n\t}\n\n\t@Override\n\tget serializationType(): TransitionType {\n\t\treturn TransitionType.ACTION;\n\t}\n\n\t@Override\n\tget isEpsilon(): boolean {\n\t\treturn true; // we are to be ignored by analysis 'cept for predicates\n\t}\n\n\t@Override\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic toString(): string {\n\t\treturn \"action_\" + this.ruleIndex + \":\" + this.actionIndex;\n\t}\n}\n"]}