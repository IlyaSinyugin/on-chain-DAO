{"version":3,"file":"TransitionType.js","sourceRoot":"","sources":["../../../src/atn/TransitionType.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAEH,wDAAwD;AAExD,IAAkB,cAYjB;AAZD,WAAkB,cAAc;IAC/B,8BAA8B;IAC9B,yDAAW,CAAA;IACX,qDAAS,CAAA;IACT,mDAAQ,CAAA;IACR,6DAAa,CAAA;IACb,mDAAQ,CAAA;IACR,uDAAU,CAAA;IACV,iDAAO,CAAA;IACP,yDAAW,CAAA;IACX,2DAAY,CAAA;IACZ,gEAAe,CAAA;AAChB,CAAC,EAZiB,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAY/B","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:37.8530496-07:00\n\nexport const enum TransitionType {\n\t// constants for serialization\n\tEPSILON = 1,\n\tRANGE = 2,\n\tRULE = 3,\n\tPREDICATE = 4, // e.g., {isType(input.LT(1))}?\n\tATOM = 5,\n\tACTION = 6,\n\tSET = 7, // ~(A|B) or ~atom, wildcard, which convert to next 2\n\tNOT_SET = 8,\n\tWILDCARD = 9,\n\tPRECEDENCE = 10,\n}\n"]}