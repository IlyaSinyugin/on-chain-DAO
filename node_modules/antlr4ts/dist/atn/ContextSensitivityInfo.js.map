{"version":3,"file":"ContextSensitivityInfo.js","sourceRoot":"","sources":["../../../src/atn/ContextSensitivityInfo.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;;;;AAEH,wDAAwD;AAExD,2DAAwD;AACxD,8CAAwC;AAIxC;;;;;;;;;;;;;;;;GAgBG;AACH,IAAa,sBAAsB,GAAnC,4BAAoC,SAAQ,qCAAiB;IAC5D;;;;;;;;;;;OAWG;IACH,YACC,QAAgB,EACP,KAAqB,EACrB,KAAkB,EAC3B,UAAkB,EAClB,SAAiB;QAEjB,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;CACD,CAAA;AAtBY,sBAAsB;IAehC,WAAA,oBAAO,CAAA;IACP,WAAA,oBAAO,CAAA;GAhBG,sBAAsB,CAsBlC;AAtBY,wDAAsB","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:28.1575933-07:00\n\nimport { DecisionEventInfo } from \"./DecisionEventInfo\";\nimport { NotNull } from \"../Decorators\";\nimport { SimulatorState } from \"./SimulatorState\";\nimport { TokenStream } from \"../TokenStream\";\n\n/**\n * This class represents profiling event information for a context sensitivity.\n * Context sensitivities are decisions where a particular input resulted in an\n * SLL conflict, but LL prediction produced a single unique alternative.\n *\n * In some cases, the unique alternative identified by LL prediction is not\n * equal to the minimum represented alternative in the conflicting SLL\n * configuration set. Grammars and inputs which result in this scenario are\n * unable to use {@link PredictionMode#SLL}, which in turn means they cannot use\n * the two-stage parsing strategy to improve parsing performance for that\n * input.\n *\n * @see ParserATNSimulator#reportContextSensitivity\n * @see ParserErrorListener#reportContextSensitivity\n *\n * @since 4.3\n */\nexport class ContextSensitivityInfo extends DecisionEventInfo {\n\t/**\n\t * Constructs a new instance of the {@link ContextSensitivityInfo} class\n\t * with the specified detailed context sensitivity information.\n\t *\n\t * @param decision The decision number\n\t * @param state The final simulator state containing the unique\n\t * alternative identified by full-context prediction\n\t * @param input The input token stream\n\t * @param startIndex The start index for the current prediction\n\t * @param stopIndex The index at which the context sensitivity was\n\t * identified during full-context prediction\n\t */\n\tconstructor(\n\t\tdecision: number,\n\t\t@NotNull state: SimulatorState,\n\t\t@NotNull input: TokenStream,\n\t\tstartIndex: number,\n\t\tstopIndex: number) {\n\n\t\tsuper(decision, state, input, startIndex, stopIndex, true);\n\t}\n}\n"]}