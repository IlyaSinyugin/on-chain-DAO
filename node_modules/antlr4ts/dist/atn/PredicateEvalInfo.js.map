{"version":3,"file":"PredicateEvalInfo.js","sourceRoot":"","sources":["../../../src/atn/PredicateEvalInfo.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;;;;AAEH,wDAAwD;AAExD,2DAAwD;AACxD,8CAAwC;AAKxC;;;;;;;GAOG;AACH,IAAa,iBAAiB,GAA9B,uBAA+B,SAAQ,qCAAiB;IAiBvD;;;;;;;;;;;;;;;;;;;OAmBG;IACH,YACU,KAAqB,EAC9B,QAAgB,EACP,KAAkB,EAC3B,UAAkB,EAClB,SAAiB,EACR,MAAuB,EAChC,UAAmB,EACnB,YAAoB;QAEpB,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;QACvE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IAClC,CAAC;CACD,CAAA;AApDY,iBAAiB;IAsC3B,WAAA,oBAAO,CAAA;IAEP,WAAA,oBAAO,CAAA;IAGP,WAAA,oBAAO,CAAA;GA3CG,iBAAiB,CAoD7B;AApDY,8CAAiB","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:35.1914305-07:00\n\nimport { DecisionEventInfo } from \"./DecisionEventInfo\";\nimport { NotNull } from \"../Decorators\";\nimport { SemanticContext } from \"./SemanticContext\";\nimport { SimulatorState } from \"./SimulatorState\";\nimport { TokenStream } from \"../TokenStream\";\n\n/**\n * This class represents profiling event information for semantic predicate\n * evaluations which occur during prediction.\n *\n * @see ParserATNSimulator#evalSemanticContext\n *\n * @since 4.3\n */\nexport class PredicateEvalInfo extends DecisionEventInfo {\n\t/**\n\t * The semantic context which was evaluated.\n\t */\n\tpublic semctx: SemanticContext;\n\t/**\n\t * The alternative number for the decision which is guarded by the semantic\n\t * context {@link #semctx}. Note that other ATN\n\t * configurations may predict the same alternative which are guarded by\n\t * other semantic contexts and/or {@link SemanticContext#NONE}.\n\t */\n\tpublic predictedAlt: number;\n\t/**\n\t * The result of evaluating the semantic context {@link #semctx}.\n\t */\n\tpublic evalResult: boolean;\n\n\t/**\n\t * Constructs a new instance of the {@link PredicateEvalInfo} class with the\n\t * specified detailed predicate evaluation information.\n\t *\n\t * @param state The simulator state\n\t * @param decision The decision number\n\t * @param input The input token stream\n\t * @param startIndex The start index for the current prediction\n\t * @param stopIndex The index at which the predicate evaluation was\n\t * triggered. Note that the input stream may be reset to other positions for\n\t * the actual evaluation of individual predicates.\n\t * @param semctx The semantic context which was evaluated\n\t * @param evalResult The results of evaluating the semantic context\n\t * @param predictedAlt The alternative number for the decision which is\n\t * guarded by the semantic context `semctx`. See {@link #predictedAlt}\n\t * for more information.\n\t *\n\t * @see ParserATNSimulator#evalSemanticContext(SemanticContext, ParserRuleContext, int)\n\t * @see SemanticContext#eval(Recognizer, RuleContext)\n\t */\n\tconstructor(\n\t\t@NotNull state: SimulatorState,\n\t\tdecision: number,\n\t\t@NotNull input: TokenStream,\n\t\tstartIndex: number,\n\t\tstopIndex: number,\n\t\t@NotNull semctx: SemanticContext,\n\t\tevalResult: boolean,\n\t\tpredictedAlt: number) {\n\n\t\tsuper(decision, state, input, startIndex, stopIndex, state.useContext);\n\t\tthis.semctx = semctx;\n\t\tthis.evalResult = evalResult;\n\t\tthis.predictedAlt = predictedAlt;\n\t}\n}\n"]}