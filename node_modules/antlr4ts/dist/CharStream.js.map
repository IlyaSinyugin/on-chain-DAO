{"version":3,"file":"CharStream.js","sourceRoot":"","sources":["../../src/CharStream.ts"],"names":[],"mappings":";AAAA;;;GAGG","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:50.0659297-07:00\n\nimport { Interval } from \"./misc/Interval\";\nimport { IntStream } from \"./IntStream\";\n\n/** A source of characters for an ANTLR lexer. */\nexport interface CharStream extends IntStream {\n\t/**\n\t * This method returns the text for a range of characters within this input\n\t * stream. This method is guaranteed to not throw an exception if the\n\t * specified `interval` lies entirely within a marked range. For more\n\t * information about marked ranges, see {@link IntStream#mark}.\n\t *\n\t * @param interval an interval within the stream\n\t * @returns the text of the specified interval\n\t *\n\t * @throws NullPointerException if `interval` is `undefined`\n\t * @throws IllegalArgumentException if `interval.a < 0`, or if\n\t * `interval.b < interval.a - 1`, or if `interval.b` lies at or\n\t * past the end of the stream\n\t * @throws UnsupportedOperationException if the stream does not support\n\t * getting the text of the specified interval\n\t */\n\t//@NotNull\n\tgetText(/*@NotNull*/ interval: Interval): string;\n}\n"]}