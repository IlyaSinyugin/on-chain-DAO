{"version":3,"file":"ParseCancellationException.js","sourceRoot":"","sources":["../../../src/misc/ParseCancellationException.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAEH,wDAAwD;AAExD;;;;;;;GAOG;AACH,gCAAwC,SAAQ,KAAK;IAIpD,YAAmB,KAAY;QAC9B,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QADH,UAAK,GAAL,KAAK,CAAO;QAE9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;CACD;AAZD,gEAYC","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:42.5447085-07:00\n\n/**\n * This exception is thrown to cancel a parsing operation. This exception does\n * not extend {@link RecognitionException}, allowing it to bypass the standard\n * error recovery mechanisms. {@link BailErrorStrategy} throws this exception in\n * response to a parse error.\n *\n * @author Sam Harwell\n */\nexport class ParseCancellationException extends Error {\n\t// private static serialVersionUID: number =  -3529552099366979683L;\n\tpublic readonly stack?: string;\n\n\tconstructor(public cause: Error) {\n\t\tsuper(cause.message);\n\t\tthis.stack = cause.stack;\n\t}\n\n\tpublic getCause(): Error {\n\t\treturn this.cause;\n\t}\n}\n"]}