{"version":3,"file":"ObjectEqualityComparator.js","sourceRoot":"","sources":["../../../src/misc/ObjectEqualityComparator.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;AAIH,8CAAyC;AAGzC;;;;;GAKG;AACH;IAGC;;;;;OAKG;IAEI,QAAQ,CAAC,GAAiC;QAChD,IAAI,GAAG,IAAI,IAAI,EAAE;YAChB,OAAO,CAAC,CAAC;SACT;QAED,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;IACvB,CAAC;IAED;;;;;;;;OAQG;IAEI,MAAM,CAAC,CAA+B,EAAE,CAA+B;QAC7E,IAAI,CAAC,IAAI,IAAI,EAAE;YACd,OAAO,CAAC,IAAI,IAAI,CAAC;SACjB;QAED,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;;AAjCsB,iCAAQ,GAA6B,IAAI,wBAAwB,EAAE,CAAC;AAS3F;IADC,qBAAQ;wDAOR;AAYD;IADC,qBAAQ;sDAOR;AAlCF,4DAoCC","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-03T02:09:42.2127260-07:00\nimport { EqualityComparator } from \"./EqualityComparator\";\nimport { Override } from \"../Decorators\";\nimport { Equatable } from \"./Stubs\";\n\n/**\n * This default implementation of {@link EqualityComparator} uses object equality\n * for comparisons by calling {@link Object#hashCode} and {@link Object#equals}.\n *\n * @author Sam Harwell\n */\nexport class ObjectEqualityComparator implements EqualityComparator<Equatable | null | undefined> {\n\tpublic static readonly INSTANCE: ObjectEqualityComparator = new ObjectEqualityComparator();\n\n\t/**\n\t * {@inheritDoc}\n\t *\n\t * This implementation returns\n\t * `obj.`{@link Object#hashCode hashCode()}.\n\t */\n\t@Override\n\tpublic hashCode(obj: Equatable | null | undefined): number {\n\t\tif (obj == null) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn obj.hashCode();\n\t}\n\n\t/**\n\t * {@inheritDoc}\n\t *\n\t * This implementation relies on object equality. If both objects are\n\t * `undefined` or `null`, this method returns `true`. Otherwise if only\n\t * `a` is `undefined` or `null`, this method returns `false`. Otherwise,\n\t * this method returns the result of\n\t * `a.`{@link Object#equals equals}`(b)`.\n\t */\n\t@Override\n\tpublic equals(a: Equatable | null | undefined, b: Equatable | null | undefined): boolean {\n\t\tif (a == null) {\n\t\t\treturn b == null;\n\t\t}\n\n\t\treturn a.equals(b);\n\t}\n\n}\n"]}